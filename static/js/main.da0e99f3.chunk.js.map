{"version":3,"sources":["BLL/reducers/profile-reducer.ts","DAL/api/authAPI.ts","utils/error-utils.ts","BLL/reducers/login-reducer.ts","BLL/reducers/app-reducer.ts","BLL/reducers/registration-reducer.ts","BLL/reducers/recoveryPassword-reducer.ts","BLL/reducers/forgotPassword-reducer.ts","BLL/store.ts","UI/common/components-common/Title/Title.tsx","UI/common/components-common/Loading/Loading.tsx","UI/common/components-common/SnackbarError/SnackbarError.tsx","UI/components/RegistrationForm/RegistrationForm.tsx","UI/common/components-common/Loading/CircleLoading.tsx","UI/components/Profile/Profile.tsx","UI/common/components-common/spinner/Spinner.tsx","UI/components/login/Login.tsx","UI/components/RecoveryPassword/RecoveryPassword.tsx","UI/common/components-common/SimplePopover/SimplePopover.tsx","UI/components/ForgotPassword/FogotPassword.tsx","App.tsx","serviceWorker.ts","index.tsx","UI/components/RegistrationForm/RegistrationForm.module.scss","UI/components/RecoveryPassword/RecoveryPassword.module.scss","UI/components/ForgotPassword/ForgotPassword.module.scss","UI/components/Profile/Profile.module.scss","UI/common/components-common/Title/Title.module.scss","UI/common/css/styles/container.module.scss","UI/common/components-common/spinner/spinner.svg"],"names":["initialState","status","error","isInitialized","loading","setLoadingAC","loadingStatus","type","instance","axios","create","baseURL","withCredentials","authAPI","userData","post","data","delete","email","from","message","password","userId","resetPasswordToken","handleServerNetworkError","dispatch","errorMessage","response","setAppErrorMessage","initState","isSignIn","success","isSuccessfulMessage","setSuccessfulMessage","value","setAppStatus","isRegistered","userRegisteredAC","passwordIsUpdated","emailSentSuccessful","reducers","combineReducers","profile","state","action","registration","login","app","recoveryPassword","forgotPassword","store","createStore","applyMiddleware","thunkMiddleware","window","Title","title","className","classes","useStyles","makeStyles","theme","createStyles","position","top","left","zIndex","width","Loading","styles","LinearProgress","Alert","props","elevation","variant","SnackbarError","useSelector","useDispatch","handleClose","event","reason","isOpen","Snackbar","open","autoHideDuration","onClose","severity","grid","maxWidth","margin","formControl","container","height","formGroup","alignItems","textField","paddingBottom","button","marginBottom","textAlign","RegistrationForm","formik","useFormik","initialValues","validate","values","errors","test","length","onSubmit","then","res","catch","finally","to","registrationForm","Grid","justify","item","Paper","style","padding","form","handleSubmit","FormControl","FormGroup","inputBox","TextField","label","undefined","getFieldProps","Button","disabled","isValid","dirty","color","textDecoration","progressStyle","transform","CircleLoading","CircularProgress","Profile","useEffect","containerStyle","profileContent","btn","onClick","err","Spinner","bottom","src","spinner","alt","Login","gridItem","display","justifyContent","formLabel","errMessage","signUp","disable","opacity","pointerEvents","enable","rememberMe","setUser","FormControlLabel","control","Checkbox","checked","RecoveryPassword","useParams","confirmPassword","recoveryPasswordTC","typography","spacing","SimplePopover","Popover","anchorOrigin","vertical","horizontal","transformOrigin","Typography","backgroundColor","ForgotPassword","App","exact","path","render","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister","console","module","exports"],"mappings":"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","file":"static/js/main.da0e99f3.chunk.js","sourcesContent":["import {Dispatch} from \"redux\";\r\n\r\nconst PROFILE_SET_LOADING = 'PROFILE_SET_LOADING';\r\n\r\nconst initialState: InitialStateType = {\r\n\tstatus: 'idle',\r\n\terror: null,\r\n\tisInitialized: false,\r\n\tloading: false\r\n}\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType):InitialStateType  => {\r\n\tswitch (action.type) {\r\n\t\tcase PROFILE_SET_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: action.loadingStatus\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn state\r\n}\r\n\r\n\r\n//Action creators\r\n\r\nexport const setLoadingAC = (loadingStatus: boolean) => {\r\n\treturn {type: PROFILE_SET_LOADING, loadingStatus}\r\n}\r\n\r\n// Thanks\r\n\r\nexport const setLoadingTC = (loadingStatus: boolean) => (dispatch: Dispatch) => {\r\n\tdispatch(setLoadingAC(loadingStatus))\r\n}\r\n\r\n\r\n// types\r\n\r\ntype InitialStateType = {\r\n\tstatus: 'idle' | 'success' | 'failed',\r\n\terror: null | string,\r\n\tisInitialized: boolean,\r\n\tloading: boolean\r\n}\r\ntype ActionsType = ReturnType<typeof setLoadingAC>","import axios from 'axios'\r\nimport {UserDataType} from \"../../UI/components/RegistrationForm/RegistrationForm\";\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n\twithCredentials: true\r\n})\r\n\r\nexport const authAPI = {\r\n\tcreateUser(userData: UserDataType) {\r\n\t\treturn instance.post<CreateUserType>('auth/register', userData)\r\n\t},\r\n\tlogin(data: LoginParamsType) {\r\n\t\treturn instance.post<ResponseLoginType>(`auth/login`, data)\r\n\t},\r\n\tme() {\r\n\t\treturn instance.post<ResponseMeType>('auth/me', {})\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete<DeleteType>('auth/me')\r\n\t},\r\n\tsendRecoveryEmail(email: string) {\r\n\t\treturn instance.post<{ info: string, error: string }>('auth/forgot', {\r\n\t\t\temail: email,\r\n\t\t\tfrom: 'testdenis12345@gmail.com',\r\n\t\t\tmessage: `<div style=\"background-color: lime; padding: 15px\"> \r\n\t\t\t\t\tpassword recovery link: \t\r\n\t\t\t\t\t<a href='https://prudiusdenys.github.io/friday-project/#/recovery/$token$'>link</a></div>`\r\n\t\t\t// хтмп-письмо, вместо $token$ бэк вставит токен\r\n\t\t})\r\n\t},\r\n\tsetNewPassword(password: string, userId: string) {\r\n\t\treturn instance.post<{ info: string, error: string }>('auth/set-new-password', {password: password, resetPasswordToken: userId\t})\r\n\t}\r\n}\r\n\r\n// types\r\n\r\ntype CreateUserType = {\r\n\taddedUser: {\r\n\t\tcreated: string\r\n\t\temail: string\r\n\t\tisAdmin: boolean\r\n\t\tname: string\r\n\t\tpublicCardPacksCount: number\r\n\t\trememberMe: boolean\r\n\t\tupdated: string\r\n\t\tverified: boolean\r\n\t\t__v: number\r\n\t\t_id: string\r\n\t}\r\n\tsuccess: boolean\r\n}\r\n\r\nexport type ResponseLoginType = {\r\n\t_id: string\r\n\temail: string\r\n\tname: string\r\n\tavatar?: string\r\n\tpublicCardPacksCount: number // количество колод\r\n\tcreated: string // Date\r\n\tupdated: string // Date\r\n\tisAdmin: boolean\r\n\tverified: boolean // подтвердил ли почту\r\n\trememberMe: boolean\r\n\ttoken?: string,\r\n\ttokenDeathTime?: number\r\n\terror: string | null,\r\n}\r\n\r\nexport type LoginParamsType = {\r\n\temail: string\r\n\tpassword: string\r\n\trememberMe: boolean\r\n}\r\n\r\ntype ResponseMeType = {\r\n\t_id: string\r\n\temail: string\r\n\tname: string\r\n\tavatar?: string\r\n\tpublicCardPacksCount: number // количество колод\r\n\tcreated: Date\r\n\tupdated: Date\r\n\tisAdmin: boolean\r\n\tverified: boolean // подтвердил ли почту\r\n\trememberMe: boolean\r\n\terror: string\r\n}\r\ntype DeleteType = {\r\n\tinfo: \"logOut success —ฅ/ᐠ.̫ .ᐟ\\ฅ—\"\r\n\terror: string\r\n}","import {Dispatch} from \"redux\";\r\nimport {AppErrorMessageType, setAppErrorMessage} from \"../BLL/reducers/app-reducer\";\r\n\r\nexport const handleServerNetworkError = (error: ServerErrorType, dispatch: DispatchType) => {\r\n\tconst errorMessage = error.response.data.error ? error.response.data.error : 'Some error :('\r\n\tdispatch(setAppErrorMessage(errorMessage))\r\n}\r\n\r\ntype DispatchType = Dispatch<AppErrorMessageType>\r\ntype ServerErrorType = {response:{data:{error: string}}}","import {Dispatch} from \"redux\";\r\nimport {LoginParamsType, authAPI, ResponseLoginType} from \"../../DAL/api/authAPI\";\r\nimport {handleServerNetworkError} from \"../../utils/error-utils\";\r\nimport {setAppStatus} from \"./app-reducer\";\r\nimport {setLoadingAC} from \"./profile-reducer\";\r\n\r\nconst initState: StateType = {\r\n\tisSignIn: false,\r\n}\r\n\r\nexport const loginReducer = (state: StateType = initState, action: ActionType): StateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"login/IS-SIGN-IN\": {\r\n\t\t\treturn {...state, isSignIn: action.isSignIn}\r\n\t\t}\r\n\t\tcase \"login/SET-USER\": {\r\n\t\t\treturn {...state, ...action.data}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n// Action\r\nexport const isSignIn = (isSignIn: boolean) => ({type: 'login/IS-SIGN-IN', isSignIn} as const)\r\nexport const setUser = (data: ResponseLoginType) => ({type: 'login/SET-USER', data} as const)\r\n\r\n// Thunk\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch) => {\r\n\tdispatch(setAppStatus(false))\r\n\tdispatch(setLoadingAC(true))\r\n\tauthAPI.login(data)\r\n\t\t.then(res => {\r\n\t\t\tdispatch(isSignIn(true))\r\n\t\t\tdispatch(setUser(res.data))\r\n\t\t\tdispatch(setAppStatus(true))\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\thandleServerNetworkError(err, dispatch)\r\n\t\t\tdispatch(setAppStatus(true))\r\n\t\t})\r\n\t\t.finally(() => dispatch(setLoadingAC(false)))\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n\tdispatch(setLoadingAC(true))\r\n\tauthAPI.logout()\r\n\t\t.then(res => {\r\n\t\t\tdispatch(isSignIn(false))\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\thandleServerNetworkError(err, dispatch)\r\n\t\t})\r\n\t\t.finally(() => dispatch(setLoadingAC(false)))\r\n}\r\n\r\n// Types\r\ntype StateType = { isSignIn: boolean }\r\ntype ActionType = IsSignInType | ReturnType<typeof setUser>\r\ntype IsSignInType = ReturnType<typeof isSignIn>","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../DAL/api/authAPI\";\r\nimport {isSignIn, setUser} from \"./login-reducer\";\r\n\r\nconst initState: StateType = {\r\n\terrorMessage: null,\r\n\tsuccess: true,\r\n\tisInitialized: false,\r\n\tisSuccessfulMessage: false\r\n}\r\n\r\nexport const appReducer = (state: StateType = initState, action: ActionType): StateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"app/SET-STATUS\": {\r\n\t\t\treturn {...state, success: action.success}\r\n\t\t}\r\n\t\tcase \"app/SET-ERROR-MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terrorMessage: action.errorMessage\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase \"app/SET-APP-INITIALIZED\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisInitialized: action.value\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase \"app/SET-SUCCESS-MESSAGE\":{\r\n\t\t\treturn {\r\n\t\t\t\t...state, isSuccessfulMessage: action.value\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n// Action\r\nexport const setAppErrorMessage = (errorMessage: string | null) => {\r\n\treturn {type: 'app/SET-ERROR-MESSAGE', errorMessage} as const\r\n}\r\nexport const setAppInitialized = (value: boolean) => {\r\n\treturn {type: 'app/SET-APP-INITIALIZED', value} as const\r\n}\r\nexport const setSuccessfulMessage = (value: boolean) => {\r\n\treturn {type: 'app/SET-SUCCESS-MESSAGE', value} as const\r\n}\r\n\r\nexport const setAppStatus = (success: boolean) => ({type: 'app/SET-STATUS', success} as const)\r\n// Thunk\r\n\r\nexport const initializeAppTC = () => (dispatch: Dispatch) => {\r\n\tauthAPI.me()\r\n\t\t.then(res => {\r\n\t\t\tdispatch(isSignIn(true))\r\n\t\t\tdispatch(setAppInitialized(true))\r\n\t\t})\r\n}\r\n\r\n// Types\r\ntype StateType = {\r\n\terrorMessage: string | null\r\n\tsuccess: boolean,\r\n\tisInitialized: boolean\r\n\tisSuccessfulMessage: boolean\r\n}\r\n\r\ntype ActionType = AppErrorMessageType\r\n\t| AppStatusType\r\n\t| ReturnType<typeof setAppInitialized>\r\n\t| ReturnType<typeof setUser>\r\n\t| ReturnType<typeof setSuccessfulMessage>\r\nexport type AppErrorMessageType = ReturnType<typeof setAppErrorMessage>\r\nexport type AppStatusType = ReturnType<typeof setAppStatus>","import {Dispatch} from \"redux\";\r\nimport {UserDataType} from \"../../UI/components/RegistrationForm/RegistrationForm\";\r\nimport {authAPI} from \"../../DAL/api/authAPI\";\r\nimport {setLoadingAC} from \"./profile-reducer\";\r\nimport {setAppErrorMessage} from \"./app-reducer\";\r\n\r\nconst REGISTRATION_REGISTER_USER = ' REGISTRATION/REGISTER_USER';\r\n\r\nconst initialState = {\r\n\tisRegistered: false,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase REGISTRATION_REGISTER_USER : {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisRegistered: action.isRegistered\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn state\r\n}\r\n\r\n\r\n//Action creators\r\n\r\nconst userRegisteredAC = (isRegistered: boolean) => {\r\n\treturn {type: REGISTRATION_REGISTER_USER, isRegistered} as const\r\n}\r\n\r\n// Thanks\r\n\r\nexport const userRegisterTC = (userData: UserDataType) => (dispatch: Dispatch) => {\r\n\tdispatch(setLoadingAC(true))\r\n\tauthAPI.createUser(userData)\r\n\t\t.then(res => {\r\n\t\t\tdispatch(userRegisteredAC(true))\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tdispatch(userRegisteredAC(false))\r\n\t\t\tdispatch(setAppErrorMessage(error.response.data.error))\r\n\t\t})\r\n\t\t.finally(() => dispatch(setLoadingAC(false)))\r\n}\r\n\r\n// types\r\n\r\ntype ActionsType = ReturnType<typeof userRegisteredAC>","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../DAL/api/authAPI\";\r\nimport {setLoadingAC} from \"./profile-reducer\";\r\nimport {setAppErrorMessage} from \"./app-reducer\";\r\n\r\n\r\nconst initialState = {\r\n\tpasswordIsUpdated: false,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const recoveryPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"recoveryPassword/PASSWORD-IS-CONFIRMED\" : {\r\n\t\t\treturn {...state, passwordIsUpdated: action.value}\r\n\t\t}\r\n\t}\r\n\treturn state\r\n}\r\n\r\n\r\n//Action creators\r\n\r\nconst updatePassword = (value: boolean) => {\r\n\treturn {type: 'recoveryPassword/PASSWORD-IS-CONFIRMED', value} as const\r\n}\r\n\r\n// Thanks\r\n\r\nexport const recoveryPasswordTC = (password: string, userId: string) => (dispatch: Dispatch) => {\r\n\tdispatch(setLoadingAC(true))\r\n\tauthAPI.setNewPassword(password, userId)\r\n\t\t.then(res => {\r\n\t\t\tdispatch(updatePassword(true))\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tdispatch(setAppErrorMessage(error.response.data.error))\r\n\t\t})\r\n\t\t.finally(() => dispatch(setLoadingAC(false)))\r\n}\r\n\r\n// types\r\n\r\ntype ActionsType = ReturnType<typeof updatePassword>","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../DAL/api/authAPI\";\r\nimport {setLoadingAC} from \"./profile-reducer\";\r\nimport {setAppErrorMessage, setSuccessfulMessage} from \"./app-reducer\";\r\n\r\n\r\nconst initialState = {\r\n\temailSentSuccessful: false,\r\n\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const forgotPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"forgotPassword/EMAIL-SET-SUCCESSFUL\" : {\r\n\t\t\treturn {...state, emailSentSuccessful: action.value}\r\n\t\t}\r\n\t}\r\n\treturn state\r\n}\r\n\r\n\r\n//Action creators\r\n\r\nexport const emailSentSuccessfulAC = (value: boolean) => {\r\n\treturn {type: 'forgotPassword/EMAIL-SET-SUCCESSFUL', value} as const\r\n}\r\n\r\n// Thanks\r\n\r\nexport const forgotPasswordTC = (email: string) => (dispatch: Dispatch) => {\r\n\tdebugger\r\n\tdispatch(setLoadingAC(true))\r\n\tauthAPI.sendRecoveryEmail(email)\r\n\t\t.then(res => {\r\n\t\t\tdispatch(emailSentSuccessfulAC(true))\r\n\t\t\tdispatch(setSuccessfulMessage(true))\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tdispatch(setAppErrorMessage(error.response.data.error))\r\n\t\t})\r\n\t\t.finally(() => dispatch(setLoadingAC(false)))\r\n}\r\n\r\n// types\r\n\r\ntype ActionsType = ReturnType<typeof emailSentSuccessfulAC>","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {profileReducer} from \"./reducers/profile-reducer\";\r\nimport {registrationReducer} from \"./reducers/registration-reducer\";\r\nimport {loginReducer} from \"./reducers/login-reducer\";\r\nimport {appReducer} from \"./reducers/app-reducer\";\r\nimport {recoveryPasswordReducer} from \"./reducers/recoveryPassword-reducer\";\r\nimport {forgotPasswordReducer} from \"./reducers/forgotPassword-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n\tprofile: profileReducer,\r\n\tregistration: registrationReducer,\r\n\tlogin: loginReducer,\r\n\tapp: appReducer,\r\n\trecoveryPassword: recoveryPasswordReducer,\r\n\tforgotPassword: forgotPasswordReducer\r\n})\r\n\r\nexport type rootReducers = ReturnType<typeof reducers>\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from \"react\";\r\nimport classes from \"./Title.module.scss\";\r\n\r\ntype PropsType = {\r\n\ttitle: string\r\n}\r\n\r\nexport const Title = ({title} : PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.title}>\r\n\t\t\t<h1>{title}</h1>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport {createStyles, LinearProgress, Theme} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tloading:{\r\n\t\t\tposition: 'absolute',\r\n\t\t\ttop: '80px',\r\n\t\t\tleft: '0',\r\n\t\t\tzIndex: 1,\r\n\t\t\twidth: '100%'\r\n\t\t}\r\n\t}),\r\n);\r\n\r\nexport const Loading = () => {\r\n\tconst styles = useStyles();\r\n\treturn <LinearProgress className={styles.loading}/>\r\n}","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {rootReducers} from \"../../../../BLL/store\";\r\nimport {setAppErrorMessage} from \"../../../../BLL/reducers/app-reducer\";\r\n\r\nfunction Alert(props: AlertProps) {\r\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport const SnackbarError = () => {\r\n\tconst error = useSelector<rootReducers, string | null>(state => state.app.errorMessage);\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tdispatch(setAppErrorMessage(null));\r\n\t}\r\n\r\n\r\n\tconst isOpen = error !== null;\r\n\r\n\treturn (\r\n\t\t<Snackbar open={isOpen} autoHideDuration={3000} onClose={handleClose}>\r\n\t\t\t<Alert onClose={handleClose} severity={'error'}>\r\n\t\t\t\t{error}\r\n\t\t\t</Alert>\r\n\t\t</Snackbar>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport classes from './RegistrationForm.module.scss';\r\nimport {Button, createStyles, FormControl, FormGroup, Grid, Paper, TextField, Theme} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useFormik} from \"formik\";\r\nimport {Title} from \"../../common/components-common/Title/Title\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {rootReducers} from \"../../../BLL/store\";\r\nimport {Loading} from \"../../common/components-common/Loading/Loading\";\r\nimport {NavLink, Redirect, } from \"react-router-dom\";\r\nimport {userRegisterTC} from \"../../../BLL/reducers/registration-reducer\";\r\nimport {SnackbarError} from \"../../common/components-common/SnackbarError/SnackbarError\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tgrid: {\r\n\t\t\tmaxWidth: '600px',\r\n\t\t\twidth: '100%',\r\n\t\t\tmargin: '0 30px'\r\n\t\t},\r\n\t\tformControl: {\r\n\t\t\twidth: '100%'\r\n\t\t},\r\n\t\tcontainer: {\r\n\t\t\theight: '100vh',\r\n\t\t},\r\n\t\tformGroup: {\r\n\t\t\talignItems: 'center'\r\n\t\t},\r\n\t\ttextField: {\r\n\t\t\twidth: '100%',\r\n\t\t\tpaddingBottom: '30px',\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\twidth: '100%',\r\n\t\t\tmarginBottom: '15px',\r\n\t\t},\r\n\t\tregistration: {\r\n\t\t\ttextAlign: 'center',\r\n\t\t},\r\n\t}),\r\n);\r\n\r\ntype FormikErrorType = {\r\n\temail?: string\r\n\tpassword?: string\r\n}\r\n\r\nexport type UserDataType = {\r\n\temail: string\r\n\tpassword: string\r\n}\r\n\r\nexport const RegistrationForm = () => {\r\n\r\n\tconst styles = useStyles();\r\n\tconst dispatch = useDispatch();\r\n\tconst loading = useSelector<rootReducers, boolean>(state => state.profile.loading)\r\n\tconst isRegistered = useSelector<rootReducers, boolean>(state => state.registration.isRegistered)\r\n\tconst isSignIn = useSelector<rootReducers, boolean>(state => state.login.isSignIn)\r\n\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t},\r\n\t\tvalidate: (values: UserDataType) => {\r\n\t\t\tconst errors: FormikErrorType = {};\r\n\t\t\tif (!values.email) {\r\n\t\t\t\terrors.email = 'This field is required';\r\n\t\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n\t\t\t\terrors.email = 'Invalid email address';\r\n\t\t\t}\r\n\t\t\telse if (!values.password) {\r\n\t\t\t\terrors.password = 'This field is required';\r\n\t\t\t} else if (values.password.length < 8) {\r\n\t\t\t\terrors.password = 'Password length should be at least 8 characters';\r\n\t\t\t}\r\n\t\t\treturn errors\r\n\t\t},\r\n\t\tonSubmit: values => {\r\n\t\t\tdispatch(userRegisterTC(values))\r\n\t\t},\r\n\t});\r\n\r\n\tif(isRegistered){\r\n\t\treturn <Redirect to={'/login'}/>\r\n\t}\r\n\tif(isSignIn){\r\n\t\treturn <Redirect to={'/'}/>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.registrationForm}>\r\n\t\t\t{loading && <Loading/>}\r\n\t\t\t<Title title={'Registration Form'}/>\r\n\t\t\t<Grid container justify={\"center\"} alignItems={'center'} className={styles.container}>\r\n\t\t\t\t<Grid item className={styles.grid}>\r\n\t\t\t\t\t<Paper elevation={3} style={{padding: '30px'}}>\r\n\t\t\t\t\t\t<div className={styles.registration}>\r\n\t\t\t\t\t\t\t<h2 style={{margin: '0 0 30px 0'}}>Please fill in all fields</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<form className={classes.form} onSubmit={formik.handleSubmit}>\r\n\t\t\t\t\t\t\t<FormControl className={styles.formControl}>\r\n\t\t\t\t\t\t\t\t<FormGroup className={styles.formGroup}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.inputBox}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField className={styles.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t label=\"Email\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t error={formik.errors.email ? true : undefined}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t {...formik.getFieldProps('email')}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{formik.errors.email && <div className={classes.error}>{formik.errors.email}</div>}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.inputBox}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField className={styles.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t type={'password'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t label=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t error={formik.errors.password ? true : undefined}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t {...formik.getFieldProps('password')}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{formik.errors.password && <div className={classes.error}>{formik.errors.password}</div>}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<Button type={'submit'} disabled={!(formik.isValid && formik.dirty)} variant={\"contained\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={'primary'} className={styles.button}>Sign\r\n\t\t\t\t\t\t\t\t\t\tup</Button>\r\n\t\t\t\t\t\t\t\t\t<NavLink to={'/login'} style={{textDecoration: 'none', width: '100%'}}>\r\n\t\t\t\t\t\t\t\t\t\t<Button style={{width: '100%'}} color={'secondary'} variant={\"contained\"}>Login</Button>\r\n\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<SnackbarError/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\n\r\nconst progressStyle = {\r\n\tposition: 'absolute',\r\n\ttop: '50%',\r\n\tleft: '50%',\r\n\ttransform: 'translate(-50%,-50%)'\r\n} as const\r\n\r\nexport const CircleLoading = () => {\r\n\treturn (\r\n\t\t<div style={progressStyle}>\r\n\t\t\t<CircularProgress/>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useEffect} from \"react\";\r\nimport classes from \"./Profile.module.scss\";\r\nimport {Title} from \"../../common/components-common/Title/Title\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {rootReducers} from \"../../../BLL/store\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {logoutTC} from \"../../../BLL/reducers/login-reducer\";\r\nimport containerStyle from '../../common/css/styles/container.module.scss';\r\nimport {initializeAppTC} from \"../../../BLL/reducers/app-reducer\";\r\nimport { CircleLoading } from \"../../common/components-common/Loading/CircleLoading\";\r\n\r\nexport const Profile = () => {\r\n\r\n\tconst isSignIn = useSelector<rootReducers, boolean>(state => state.login.isSignIn)\r\n\tconst isInitialized = useSelector<rootReducers, boolean>(state => state.app.isInitialized)\r\n\tconst dispatch = useDispatch()\r\n\r\n\t// initialize our program (if we've logged in 'show profile')\r\n\tuseEffect(() => {\r\n\t\tdispatch(initializeAppTC())\r\n\t}, [dispatch])\r\n\r\n\tif (!isInitialized) return <CircleLoading/>\r\n\tif (!isSignIn) return <Redirect to={'/login'}/>\r\n\r\n\tconst logOutHandler = () => {\r\n\t\tdispatch(logoutTC())\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.profile}>\r\n\t\t\t<div className={containerStyle.container}>\r\n\t\t\t\t<div className={classes.profileContent}>\r\n\t\t\t\t\t<Title title={'Welcome to Profile page'}/>\r\n\t\t\t\t\t<div className={classes.btn}>\r\n\t\t\t\t\t\t{isSignIn  && <Button variant=\"contained\" color={\"secondary\"} onClick={logOutHandler}>Log out</Button>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport spinner from './spinner.svg'\r\n\r\nexport function Spinner() {\r\n    return (\r\n        <div style={{position: 'absolute',\r\n            zIndex: 2, bottom: '-50px', left: '50%',\r\n            transform: 'translateX(-50%)'}}>\r\n            <img src={spinner} alt=\"spinner\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {\r\n\tButton,\r\n\tCheckbox,\r\n\tcreateStyles,\r\n\tFormControl,\r\n\tFormControlLabel,\r\n\tFormGroup,\r\n\tGrid, Paper,\r\n\tTextField,\r\n\tTheme\r\n} from \"@material-ui/core\";\r\nimport {useFormik} from \"formik\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginTC} from \"../../../BLL/reducers/login-reducer\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {rootReducers} from \"../../../BLL/store\";\r\nimport {Spinner} from \"../../common/components-common/spinner/Spinner\";\r\nimport {Title} from \"../../common/components-common/Title/Title\";\r\n\r\nexport function Login() {\r\n\r\n\tconst useStyles = makeStyles((theme: Theme) =>\r\n\t\tcreateStyles({\r\n\t\t\tgridItem: {\r\n\t\t\t\tposition: 'relative',\r\n\t\t\t\tzIndex: 1,\r\n\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\twidth: '100%',\r\n\t\t\t\tpadding: '0 10px'\r\n\t\t\t},\r\n\t\t\tformControl: {\r\n\t\t\t\twidth: '100%'\r\n\t\t\t},\r\n\t\t\tcontainer: {\r\n\t\t\t\theight: '100vh',\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\talignItems: 'center'\r\n\t\t\t},\r\n\t\t\tformLabel: {\r\n\t\t\t\tmargin: '10px 0 10px 0'\r\n\t\t\t},\r\n\t\t\terrMessage: {\r\n\t\t\t\tcolor: '#d82626'\r\n\t\t\t},\r\n\t\t\tbutton: {\r\n\t\t\t\tmargin: '0 0 10px 0'\r\n\t\t\t},\r\n\t\t\tsignUp: {\r\n\t\t\t\twidth: '100%'\r\n\t\t\t},\r\n\t\t\tdisable: {\r\n\t\t\t\topacity: 0.5,\r\n\t\t\t\tpointerEvents: 'none'\r\n\t\t\t},\r\n\t\t\tenable: {\r\n\t\t\t\topacity: 1,\r\n\t\t\t\tpointerEvents: 'inherit'\r\n\t\t\t}\r\n\t\t}),\r\n\t)\r\n\tconst styles = useStyles()\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst isSignIn = useSelector<rootReducers, boolean>(state => state.login.isSignIn)\r\n\tconst success = useSelector<rootReducers, boolean>(state => state.app.success)\r\n\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\trememberMe: false\r\n\t\t},\r\n\t\tvalidate: values => {\r\n\t\t\tif (!values.email) return {email: 'Email is required!'}\r\n\t\t\tif (!values.password) return {password: 'Password is required!'}\r\n\t\t\tif (values.password.length <= 6) return {password: 'Password should be more than 5 symbols'}\r\n\t\t},\r\n\t\tonSubmit: values => {\r\n\t\t\tdispatch(loginTC(values))\r\n\t\t},\r\n\t})\r\n\r\n\tif (isSignIn) return <Redirect to={'/'}/>\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Title title={'Login Form'}/>\r\n\t\t\t<Grid container className={styles.container}>\r\n\t\t\t\t<Grid item className={`${styles.gridItem} ${success ? styles.enable : styles.disable}`}>\r\n\t\t\t\t\t{!success && <Spinner/>}\r\n\t\t\t\t\t<Paper elevation={3} style={{padding: '30px'}}>\r\n\t\t\t\t\t\t{/*Hook useFormik gives handleSubmit function to take all form's values*/}\r\n\t\t\t\t\t\t<form onSubmit={formik.handleSubmit}>\r\n\t\t\t\t\t\t\t<FormControl className={styles.formControl}>\r\n\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t<TextField type={'email'} label={'Email'} margin={'normal'}\r\n\t\t\t\t\t\t\t\t\t\t// Get all props from email\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t {...formik.getFieldProps('email')}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{/*Get an error message if email is not valid*/}\r\n\t\t\t\t\t\t\t\t\t{formik.errors.email && <div className={styles.errMessage}>{formik.errors.email}</div>}\r\n\t\t\t\t\t\t\t\t\t<TextField type={'password'} label={'Password'} margin={'normal'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t {...formik.getFieldProps('password')}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{formik.errors.password && <div className={styles.errMessage}>{formik.errors.password}</div>}\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel className={styles.formLabel} label={'Remember me'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Get all props from checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// checked value must be taken from formik\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox color={'primary'} checked={formik.values.rememberMe}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('rememberMe')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<NavLink to={'/forgotPassword'} style={{marginBottom: '10px', color: '#3f51b5'}}>Forgot Password?</NavLink>\r\n\t\t\t\t\t\t\t\t\t<Button className={styles.button} type={'submit'} variant={'contained'} color={'primary'}>Sign\r\n\t\t\t\t\t\t\t\t\t\tIn</Button>\r\n\t\t\t\t\t\t\t\t\t<NavLink to={'/registration'}>\r\n\t\t\t\t\t\t\t\t\t\t<Button className={styles.signUp} variant={'contained'} color={'secondary'}>Sign Up</Button>\r\n\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport classes from './RecoveryPassword.module.scss';\r\nimport {Button, createStyles, FormControl, FormGroup, Grid, Paper, TextField, Theme} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useFormik} from \"formik\";\r\nimport {Title} from \"../../common/components-common/Title/Title\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {rootReducers} from \"../../../BLL/store\";\r\nimport {Loading} from \"../../common/components-common/Loading/Loading\";\r\nimport {SnackbarError} from \"../../common/components-common/SnackbarError/SnackbarError\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {recoveryPasswordTC} from \"../../../BLL/reducers/recoveryPassword-reducer\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tgrid: {\r\n\t\t\tmaxWidth: '400px',\r\n\t\t\twidth: '100%',\r\n\t\t\tmargin: '0 30px'\r\n\t\t},\r\n\t\tformControl: {\r\n\t\t\twidth: '100%'\r\n\t\t},\r\n\t\tcontainer: {\r\n\t\t\theight: '100vh',\r\n\t\t},\r\n\t\tformGroup: {\r\n\t\t\talignItems: 'center'\r\n\t\t},\r\n\t\ttextField: {\r\n\t\t\twidth: '100%',\r\n\t\t\tpaddingBottom: '30px',\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\twidth: '100%',\r\n\t\t\tmarginBottom: '15px',\r\n\t\t},\r\n\t\tregistration: {\r\n\t\t\ttextAlign: 'center',\r\n\t\t},\r\n\t}),\r\n);\r\n\r\ntype FormikErrorType = {\r\n\tpassword?: string\r\n\tconfirmPassword?: string\r\n}\r\n\r\nexport type UserDataType = {\r\n\tpassword: string\r\n\tconfirmPassword: string\r\n}\r\n\r\nexport const RecoveryPassword = () => {\r\n\r\n\tconst styles = useStyles();\r\n\tconst dispatch = useDispatch();\r\n\tconst loading = useSelector<rootReducers, boolean>(state => state.profile.loading)\r\n\tconst passwordIsUpdated = useSelector<rootReducers, boolean>(state => state.recoveryPassword.passwordIsUpdated)\r\n\r\n\t// get userId from URl\r\n\tconst {userId} = useParams()\r\n\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tpassword: '',\r\n\t\t\tconfirmPassword: '',\r\n\t\t},\r\n\t\tvalidate: (values: UserDataType) => {\r\n\t\t\tconst errors: FormikErrorType = {};\r\n\t\t\tif (!values.password) {\r\n\t\t\t\terrors.password = 'This field is required';\r\n\t\t\t} else if (values.password.length < 8) {\r\n\t\t\t\terrors.password = 'Password length should be at least 8 characters';\r\n\t\t\t} else if (values.confirmPassword !== values.password) {\r\n\t\t\t\terrors.confirmPassword = 'Passwords must match'\r\n\t\t\t}\r\n\t\t\treturn errors\r\n\t\t},\r\n\t\tonSubmit: values => {\r\n\t\t\tdispatch(recoveryPasswordTC(values.password, userId))\r\n\t\t},\r\n\t});\r\n\r\n\tif (passwordIsUpdated) {\r\n\t\treturn <Redirect to={'/login'}/>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.recoveryPassword}>\r\n\t\t\t{loading && <Loading/>}\r\n\t\t\t<Title title={'Recovery Password Form'}/>\r\n\t\t\t<Grid container justify={\"center\"} alignItems={'center'} className={styles.container}>\r\n\t\t\t\t<Grid item className={styles.grid}>\r\n\t\t\t\t\t<Paper elevation={3} style={{padding: '30px'}}>\r\n\t\t\t\t\t\t<form className={classes.form} onSubmit={formik.handleSubmit}>\r\n\t\t\t\t\t\t\t<FormControl className={styles.formControl}>\r\n\t\t\t\t\t\t\t\t<FormGroup className={styles.formGroup}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className={classes.inputBox}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField className={styles.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t type={'password'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t label=\"New password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t error={formik.errors.password ? true : undefined}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t {...formik.getFieldProps('password')}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{formik.errors.password && <div className={classes.error}>{formik.errors.password}</div>}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className={classes.inputBox}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField className={styles.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t type={'password'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t label=\"Confirm password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t error={formik.errors.confirmPassword ? true : undefined}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t {...formik.getFieldProps('confirmPassword')}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{formik.errors.confirmPassword &&\r\n                    <div className={classes.error}>{formik.errors.confirmPassword}</div>}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<Button type={'submit'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!(formik.isValid && formik.dirty)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={\"contained\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={'primary'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.button}>Save password\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<SnackbarError/>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setSuccessfulMessage} from \"../../../../BLL/reducers/app-reducer\";\r\nimport {rootReducers} from \"../../../../BLL/store\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\ttypography: {\r\n\t\t\tpadding: theme.spacing(6),\r\n\t\t},\r\n\t}),\r\n);\r\n\r\nexport const SimplePopover = ()=> {\r\n\tconst classes = useStyles();\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst isSuccessfulMessage = useSelector<rootReducers, boolean>(state => state.app.isSuccessfulMessage)\r\n\r\n\r\n\r\n\tconst handleClose = () => {\r\n\t\tdispatch(setSuccessfulMessage(false))\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Popover\r\n\t\t\t\topen={isSuccessfulMessage}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: 'center',\r\n\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\tvertical: 'center',\r\n\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Typography style={{backgroundColor: '#3f51b5', color:'#fff'}} className={classes.typography}>Email was sent to your address</Typography>\r\n\t\t\t</Popover>\r\n\t\t</div>\r\n\t);\r\n}","import React from \"react\";\r\nimport classes from './ForgotPassword.module.scss';\r\nimport {Button, createStyles, FormControl, FormGroup, Grid, Paper, TextField, Theme} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useFormik} from \"formik\";\r\nimport {Title} from \"../../common/components-common/Title/Title\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {rootReducers} from \"../../../BLL/store\";\r\nimport {Loading} from \"../../common/components-common/Loading/Loading\";\r\nimport {SnackbarError} from \"../../common/components-common/SnackbarError/SnackbarError\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {forgotPasswordTC} from \"../../../BLL/reducers/forgotPassword-reducer\";\r\nimport { SimplePopover } from \"../../common/components-common/SimplePopover/SimplePopover\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tgrid: {\r\n\t\t\tmaxWidth: '400px',\r\n\t\t\twidth: '100%',\r\n\t\t\tmargin: '0 30px'\r\n\t\t},\r\n\t\tformControl: {\r\n\t\t\twidth: '100%'\r\n\t\t},\r\n\t\tcontainer: {\r\n\t\t\theight: '100vh',\r\n\t\t},\r\n\t\tformGroup: {\r\n\t\t\talignItems: 'center'\r\n\t\t},\r\n\t\ttextField: {\r\n\t\t\twidth: '100%',\r\n\t\t\tpaddingBottom: '30px',\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\twidth: '100%',\r\n\t\t\tmarginBottom: '15px',\r\n\t\t},\r\n\t\tregistration: {\r\n\t\t\ttextAlign: 'center',\r\n\t\t},\r\n\t}),\r\n);\r\n\r\ntype FormikErrorType = {\r\n\temail?: string\r\n}\r\n\r\nexport type UserDataType = {\r\n\temail: string\r\n}\r\n\r\nexport const ForgotPassword = () => {\r\n\r\n\tconst styles = useStyles();\r\n\tconst dispatch = useDispatch();\r\n\tconst loading = useSelector<rootReducers, boolean>(state => state.profile.loading)\r\n\tconst emailSentSuccessful = useSelector<rootReducers, boolean>(state => state.forgotPassword.emailSentSuccessful)\r\n\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\temail: ''\r\n\t\t},\r\n\t\tvalidate: (values: UserDataType) => {\r\n\t\t\tconst errors: FormikErrorType = {};\r\n\t\t\tif (!values.email) {\r\n\t\t\t\terrors.email = 'This field is required';\r\n\t\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n\t\t\t\terrors.email = 'Invalid email address';\r\n\t\t\t}\r\n\r\n\t\t\treturn errors\r\n\t\t},\r\n\t\tonSubmit: values => {\r\n\t\t\tdispatch(forgotPasswordTC(values.email))\r\n\t\t},\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={classes.forgotPassword}>\r\n\t\t\t{loading && <Loading/>}\r\n\t\t\t<Title title={'Forgot Password Form'}/>\r\n\t\t\t<Grid container justify={\"center\"} alignItems={'center'} className={styles.container}>\r\n\t\t\t\t<Grid item className={styles.grid}>\r\n\t\t\t\t\t<Paper elevation={3} style={{padding: '30px'}}>\r\n\t\t\t\t\t\t<form className={classes.form} onSubmit={formik.handleSubmit}>\r\n\t\t\t\t\t\t\t<FormControl className={styles.formControl}>\r\n\t\t\t\t\t\t\t\t<FormGroup className={styles.formGroup}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.inputBox}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField className={styles.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t label=\"Write your email\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t error={formik.errors.email ? true : undefined}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t {...formik.getFieldProps('email')}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{formik.errors.email && <div className={classes.error}>{formik.errors.email}</div>}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<Button type={'submit'} disabled={!(formik.isValid && formik.dirty)} variant={\"contained\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={'primary'} className={styles.button}>Send</Button>\r\n\t\t\t\t\t\t\t\t\t<NavLink to={'/login'} style={{textDecoration: 'none', width: '100%'}}>\r\n\t\t\t\t\t\t\t\t\t\t<Button style={{width: '100%'}} color={'secondary'} variant={\"contained\"}>Login</Button>\r\n\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<SnackbarError/>\r\n\t\t\t{!emailSentSuccessful && <SimplePopover/>}\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./BLL/store\";\r\nimport {RegistrationForm} from \"./UI/components/RegistrationForm/RegistrationForm\";\r\nimport {Profile} from \"./UI/components/Profile/Profile\";\r\nimport {Login} from \"./UI/components/login/Login\";\r\nimport {RecoveryPassword} from \"./UI/components/RecoveryPassword/RecoveryPassword\";\r\nimport { ForgotPassword } from './UI/components/ForgotPassword/FogotPassword';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t<Route exact path={'/'} render={() => <Profile/>}/>\r\n\t\t\t\t\t<Route path={'/registration'} render={() => <RegistrationForm/>}/>\r\n\t\t\t\t\t<Route path={'/login'} render={() => <Login/>}/>\r\n\t\t\t\t\t<Route path={'/forgotPassword'} render={() => <ForgotPassword/>}/>\r\n\t\t\t\t\t<Route path={'/recovery/:userId'} render={() => <RecoveryPassword/>}/>\r\n\t\t\t\t</div>\r\n\t\t\t</Provider>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('SnackbarError during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationForm\":\"RegistrationForm_registrationForm___mcIv\",\"inputBox\":\"RegistrationForm_inputBox__1KGpA\",\"error\":\"RegistrationForm_error__2bM7-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recoveryPassword\":\"RecoveryPassword_recoveryPassword__QCnqF\",\"inputBox\":\"RecoveryPassword_inputBox__3h1TK\",\"error\":\"RecoveryPassword_error__1A7ZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotPassword\":\"ForgotPassword_forgotPassword__3kUX3\",\"inputBox\":\"ForgotPassword_inputBox__tYNiZ\",\"error\":\"ForgotPassword_error__1KoeN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContent\":\"Profile_profileContent__12fFa\",\"btn\":\"Profile_btn__1bBM3\",\"loading\":\"Profile_loading__3GbAF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1RTB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__1jjuF\"};","module.exports = __webpack_public_path__ + \"static/media/spinner.cceb1073.svg\";"],"sourceRoot":""}